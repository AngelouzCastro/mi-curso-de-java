
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author darka
 */
public class FrmReceptor extends javax.swing.JFrame {
    private FrmPrincipal mFrmPrincipal;
    private FrmReceptor mFrmReceptor;
    private String[] Datos = new String[7];
    private String[] DatosTotal = new String[4];
    private int i;
    private DefaultTableModel ModeloReceptor;
    private DefaultTableModel ModeloTotal;
    private DefaultTableModel ModeloConceptos;
     
     String[] Busqueda={"Concepto .*cantidad=\"", "Concepto .*unidad=\"", "Concepto .*descripcion=\"", "Concepto .*valorUnitario=\"", "Concepto .*importe=\""};
    private String[] archivos2 = {"EUSA740126TQ2_Factura_A1228_20151228.xml", "EUSA740126TQ2_Factura_A1238_20151230.xml",
        "EUSA740126TQ2_Factura_A1240_20151230.xml", "EUSA740126TQ2_Factura_A1244_20151231.xml",
        "EUSA740126TQ2_Factura_A1291_20160129.xml", "EUSA740126TQ2_Factura_A1292_20160129.xml",
        "EUSA740126TQ2_Factura_A1298_20160130.xml", "EUSA740126TQ2_Factura_A1299_20160130.xml",
        "EUSA740126TQ2_Factura_A1338_20160227.xml", "EUSA740126TQ2_Factura_A1340_20160227.xml",
        "EUSA740126TQ2_Factura_A1342_20160227.xml", "EUSA740126TQ2_Factura_A1345_20160229.xml",
        "EUSA740126TQ2_Factura_A1346_20160229.xml", "EUSA740126TQ2_Factura_A1359_20160304.xml"};
    
    
    
    /**
     * Creates new form FrmReceptor
     */
    public FrmReceptor() {
        initComponents();
        this.setTitle("Consulta del receptor");
        String[] TituloReceptor = {"RFC", "Nombre", "Calle", "No Exterior", "Colonia", "Munisipio", "Estado"};
        String[] TituloTotal = {"Total Impuestos Trasladados", "Impuesto", "Tasa", "Importe"};
        String[] TituloCoceptos={"Cantidad", "Unidad", "Descripci√≥n", "Valor Unitario", "Importe"};
        BtnCargar2.setVisible(false);
       
        ModeloReceptor = new DefaultTableModel(null, TituloReceptor);
        ModeloTotal = new DefaultTableModel(null, TituloTotal);
        ModeloConceptos = new DefaultTableModel(null, TituloCoceptos);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TblReceptor = new javax.swing.JTable();
        BtnCargar2 = new javax.swing.JButton();
        BtnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TblConceptos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TblTotal = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        TblReceptor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TblReceptor);

        BtnCargar2.setText("Cargar");
        BtnCargar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCargar2ActionPerformed(evt);
            }
        });

        BtnExit.setText("Cerrar");
        BtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExitActionPerformed(evt);
            }
        });

        jLabel1.setText("Datos del Receptor:");

        TblConceptos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TblConceptos);

        jLabel2.setText("Conceptos:");

        TblTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TblTotal);

        jLabel3.setText("Total de la factura:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnCargar2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3)
                    .addComponent(BtnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(BtnCargar2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCargar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCargar2ActionPerformed

       
       
    }//GEN-LAST:event_BtnCargar2ActionPerformed

    private void BtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExitActionPerformed
        
        this.hide();
        
    }//GEN-LAST:event_BtnExitActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
         mFrmReceptor = new FrmReceptor();
        
        
            String rfc = mFrmReceptor.dividir("Receptor .*rfc=\"", archivos2[i]);
            String nombre = mFrmReceptor.dividir("Receptor .*nombre=\"", archivos2[i]);
            String calle = mFrmReceptor.dividir("Domicilio.*calle=\"", archivos2[i]);
            String noExterior = mFrmReceptor.dividir("Domicilio.*noExterior=\"", archivos2[i]);
            String colonia = mFrmReceptor.dividir("Domicilio.*colonia=\"", archivos2[i]);
            String municipio = mFrmReceptor.dividir("Domicilio.*municipio=\"", archivos2[i]);
            String estado = mFrmReceptor.dividir("Domicilio.*estado=\"", archivos2[i]);

            Datos[0] = rfc;
            Datos[1] = nombre;
            Datos[2] = calle;
            Datos[3] = noExterior;
            Datos[4] = colonia;
            Datos[5] = municipio;
            Datos[6] = estado;

            ModeloReceptor.addRow(Datos);
            TblReceptor.setModel(ModeloReceptor);
            
            
            String totalImpuestosTrasladados = mFrmReceptor.dividir("totalImpuestosTrasladados=\"", archivos2[i]);
            String impuesto = mFrmReceptor.dividir("impuesto=\"", archivos2[i]);
            String tasa = mFrmReceptor.dividir("tasa=\"", archivos2[i]);
            String importe = mFrmReceptor.dividir("Traslado.*importe=\"", archivos2[i]);
            
            DatosTotal[0] = totalImpuestosTrasladados;
            DatosTotal[1] = impuesto;
            DatosTotal[2] = tasa;
            DatosTotal[3] = importe;

            ModeloTotal.addRow(DatosTotal);
            TblTotal.setModel(ModeloTotal);
            
        ArrayList<String> listaCantidad = new ArrayList();
        ArrayList<String> listaUnidad= new ArrayList();
        ArrayList<String> listaDescripcion= new ArrayList();
        ArrayList<String> listaValor= new ArrayList();
        ArrayList<String> listaImporte= new ArrayList();
        
        ModeloConceptos.setRowCount(50);
        TblConceptos.setModel(ModeloConceptos);
        dividirlista(Busqueda[0],archivos2[i],listaCantidad);
        dividirlista(Busqueda[1],archivos2[i],listaUnidad);
        dividirlista(Busqueda[2],archivos2[i],listaDescripcion);
        dividirlista(Busqueda[3],archivos2[i],listaValor);
        dividirlista(Busqueda[4],archivos2[i],listaImporte);
        
        
        
        
        
        int x = 0;
        for (String cantidad : listaCantidad) {
            TblConceptos.setValueAt(cantidad, x, 0);
            x++;
        }
        x=0;
        for (String cantidad : listaUnidad) {
            TblConceptos.setValueAt(cantidad, x, 1);
            x++;
        }
        x=0;
        for (String cantidad : listaDescripcion) {
            TblConceptos.setValueAt(cantidad, x, 2);
            x++;
        }
        x=0;
        for (String cantidad : listaValor) {
            TblConceptos.setValueAt(cantidad, x, 3);
            x++;
        }
        x=0;
        for (String cantidad : listaImporte) {
            TblConceptos.setValueAt(cantidad, x, 4);
            x++;
        }
        
    }//GEN-LAST:event_formWindowActivated

    public String dividir(String txt, String nomArchivo) {

        String resultado = "";
        try {
            FileReader f;
            File JSONFile = new File(nomArchivo);
            f = new FileReader(JSONFile);
            BufferedReader bReader = new BufferedReader(f);
            String sLine = null;
            while ((sLine = bReader.readLine()) != null) {
                //System.out.println(sLine);

                Pattern p;
                Matcher m;
                p = Pattern.compile(txt);
                m = p.matcher(sLine);
                if (m.find()) {
                    char[] a = sLine.toCharArray();
                    int cont = m.end();
                    char caracter = a[cont];
                    while (caracter != '"') {
                        cont++;
                        resultado += caracter;
                        caracter = a[cont];
                    }
                    
                }

            }
            f.close();
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(manejador_Json.class.getName()).log(Level.SEVERE, null,ex);
        } catch (IOException ex) {
            //Logger.getLogger(Maneja_JSon.class.getName()).log(Level.SEVERE, null,ex);
        }
        return resultado;
    }
    
        public void dividirlista(String txt, String nomArchivo, ArrayList<String> Lista) {
        try {
            FileReader f;
            File JSONFile = new File(nomArchivo);
            f = new FileReader(JSONFile);
            BufferedReader bReader = new BufferedReader(f);
            String sLine = null;
            while ((sLine = bReader.readLine()) != null) {
               

                Pattern p;
                Matcher m;
                p = Pattern.compile(txt);
                m = p.matcher(sLine);
                if (m.find()) {
                     String resultado = "";
                    char[] a = sLine.toCharArray();
                    int cont = m.end()-0;
                    char caracter = a[cont];
                    while (caracter != '"') {
                        cont++;
                        resultado += caracter;
                        caracter = a[cont];
                    }

                    Lista.add(resultado);
                }
                

            }
            f.close();
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(manejador_Json.class.getName()).log(Level.SEVERE, null,ex);
        } catch (IOException ex) {
            //Logger.getLogger(Maneja_JSon.class.getName()).log(Level.SEVERE, null,ex);
        }
    }
    public void enviarfila(int fila){
        this.i=fila;
    }
    public int getfila(){
        return i;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmReceptor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmReceptor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmReceptor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmReceptor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmReceptor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCargar2;
    private javax.swing.JButton BtnExit;
    private javax.swing.JTable TblConceptos;
    private javax.swing.JTable TblReceptor;
    private javax.swing.JTable TblTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
